//Задача4
//Реализовать следующее консольное приложение подобно примеру,
//который разбирался в видео. Реализуйте его на прототипах.

//Определить иерархию электроприборов. 
//Включить некоторые в розетку. Посчитать потребляемую мощность. 

//Таких приборов должно быть, как минимум, 
//два (например, настольная лампа и компьютер). 
//Выбрав прибор, подумайте, какими свойствами он обладает.

//План:

//1. Определить родительскую функцию с методами, которые включают/выключают прибор из розетки.
//2. Создать делегирующую связь [[Prototype]] для двух конкретных приборов.
//3. У каждого из приборов должны быть собственные свойства и, желательно, методы, отличные от родительских методов.
//4. Создать экземпляры каждого прибора.
//5. Вывести в консоль и посмотреть результаты работы, гордиться собой. :)


//абстрактный класс Оборудование
function Equipment(){
    this.masterType = "Электро оборудование" // общее свойство родительского класса
 };
 
 Equipment.prototype.getOnOff = function(io){ // общее метод родительского класса
  if (io == 1){
    return 'On';
  } 
   else {
     return 'Off';
   }
 };
 
 //конструктор - подкласса Лампы
 function Lamp(name,color){
   this.type = "Лампы";
   this.name = name;
   this.color = color;
 };
 Lamp.prototype = new Equipment(); // наследование 
 
 Lamp.prototype.getConsumptionToMonth = function(val){ //Собственный метод подкласса
   console.log(`Потребляемое кол-во энергии за месяц = ${val*28}`);
 };
 
 
 //конструктор - подкласса Компьютер
 function Computer(name, qntCPU){
   this.type = "Компьютеры";
   this.name = name;
   this.CPU = qntCPU;
 };
 
 Computer.prototype = new Equipment(); // наследование 
 
 Computer.prototype.getPerformanceCPU = function(val){ //Собственный метод подкласса
   console.log(`Производительность при параллельной обработке на CPU = ${val / this.CPU}`)
 };
 
 
 
 // Экземпляры подклассов
 
 const Lamp_1 = new Lamp("Лампа 1","Белая");
 const PC_1 = new Computer("NoteBook", 4);
 
 
 //вызов наследованного метода родительского класса
 console.log(Lamp_1.getOnOff(0));
 console.log(PC_1.getOnOff(1));
 
 //вызов самих объектов
 console.log(Lamp_1);
 console.log('==================================');
 console.log(PC_1);
 
 //вызов методов подкласса у объектов
 Lamp_1.getConsumptionToMonth(15);
 
 PC_1.getPerformanceCPU(12);